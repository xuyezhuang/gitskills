<?xml version="1.0" encoding="utf-8"?>
<android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fitsSystemWindows="true"
    tools:context=".MaterialDesign.FruitActivity">

    <!--让toolbar跟系统状态栏融合，对应到我们的标题就是toolbar中的imageview，
    android:fitsSystemWindows="true",单纯只给imageview设置是没用的，必须给他所有的父控件也加上，
    同时在程序中的主体将状态栏颜色指定为透明色，将android:statusbarColor=透明-->

    <android.support.design.widget.AppBarLayout
        android:layout_width="match_parent"
        android:layout_height="250dp"
        android:fitsSystemWindows="true"
        android:id="@+id/appbar">


        <!--CollapsingToolbarLayout:是一个作用于toolbar基础之上的布局，它是不能独立存在的，
        它在设计的时候就被限定只能作为appbarlayout的直接子布局来使用，而appBarlayout又必须是Coordinatorlayout的子类-->

        <!--contentScrim：在趋于折叠状态和折叠之后的背景色-->
        <!--scroll：随着滚动而滚动，exitUntilCollapsed：随着滚动折叠之后保留在界面上-->
        <android.support.design.widget.CollapsingToolbarLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/clooapsing_toolbar"
            android:fitsSystemWindows="true"
            android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
            app:contentScrim="?attr/colorPrimary"
            app:layout_scrollFlags="scroll|exitUntilCollapsed">


            <!--layout_collapseMode:指collapsingToolbarlayout在折叠过程中的折叠模式：pin在折叠过程中不变 parallax：在折叠过程中产生错位偏移，视觉效果非常好-->
            <ImageView
                android:fitsSystemWindows="true"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:scaleType="centerCrop"
                android:id="@+id/fruit_image_view"
                app:layout_collapseMode="parallax"/>

            <android.support.v7.widget.Toolbar
                android:id="@+id/toolbar"
                app:layout_collapseMode="pin"
                android:layout_width="match_parent"
                android:layout_height="?attr/actionBarSize">

            </android.support.v7.widget.Toolbar>
        </android.support.design.widget.CollapsingToolbarLayout>


    </android.support.design.widget.AppBarLayout>

    <!--NestedScrollView:跟scrollview一样，只不过外层coordinatorlayout本身已经可以响应滚动事件了，所以内部就必须得用NestedScrollView或者recyclerview
        顺便给NestedScrollView指定了一个布局行为在appbar下面滑动-->

    <android.support.v4.widget.NestedScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        app:layout_behavior="@string/appbar_scrolling_view_behavior">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical"
            >
            <android.support.v7.widget.CardView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginBottom="15dp"
                android:layout_marginLeft="15dp"
                android:layout_marginTop="3dp"
                app:cardCornerRadius="4dp"
                android:layout_marginRight="15dp">

            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:id="@+id/fruit_content_text"
                android:text="我是你老爹"
                android:layout_margin="10dp"
                />
            </android.support.v7.widget.CardView>
        </LinearLayout>

    </android.support.v4.widget.NestedScrollView>


    <android.support.design.widget.FloatingActionButton
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:src="@drawable/timg"
        android:layout_margin="16dp"
        app:layout_anchor="@id/appbar"
        app:layout_anchorGravity="bottom|end"
        />

    <!--app:layout_anchor="@id/appbar" 设置锚点在appbar范围内  layout_anchorGravity="bottom|end"：方位在右下方 -->
</android.support.design.widget.CoordinatorLayout>